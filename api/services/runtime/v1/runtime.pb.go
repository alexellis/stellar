// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/ehazlett/stellar/api/services/runtime/v1/runtime.proto

package runtime // import "github.com/ehazlett/stellar/api/services/runtime/v1"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import types "github.com/gogo/protobuf/types"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Protocol int32

const (
	Protocol_UNKNOWN Protocol = 0
	Protocol_TCP     Protocol = 1
	Protocol_UDP     Protocol = 2
	Protocol_HTTP    Protocol = 3
)

var Protocol_name = map[int32]string{
	0: "UNKNOWN",
	1: "TCP",
	2: "UDP",
	3: "HTTP",
}
var Protocol_value = map[string]int32{
	"UNKNOWN": 0,
	"TCP":     1,
	"UDP":     2,
	"HTTP":    3,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{0}
}

type InfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{0}
}
func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (dst *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(dst, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

type InfoResponse struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{1}
}
func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (dst *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(dst, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type ContainersRequest struct {
	Filters              []string `protobuf:"bytes,1,rep,name=filters" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainersRequest) Reset()         { *m = ContainersRequest{} }
func (m *ContainersRequest) String() string { return proto.CompactTextString(m) }
func (*ContainersRequest) ProtoMessage()    {}
func (*ContainersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{2}
}
func (m *ContainersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainersRequest.Unmarshal(m, b)
}
func (m *ContainersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainersRequest.Marshal(b, m, deterministic)
}
func (dst *ContainersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainersRequest.Merge(dst, src)
}
func (m *ContainersRequest) XXX_Size() int {
	return xxx_messageInfo_ContainersRequest.Size(m)
}
func (m *ContainersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainersRequest proto.InternalMessageInfo

func (m *ContainersRequest) GetFilters() []string {
	if m != nil {
		return m.Filters
	}
	return nil
}

type Container struct {
	ID                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Image                string                `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Labels               map[string]string     `protobuf:"bytes,3,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec                 *types.Any            `protobuf:"bytes,4,opt,name=spec" json:"spec,omitempty"`
	Snapshotter          string                `protobuf:"bytes,5,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	Task                 *Container_Task       `protobuf:"bytes,6,opt,name=task" json:"task,omitempty"`
	Runtime              string                `protobuf:"bytes,7,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Extensions           map[string]*types.Any `protobuf:"bytes,8,rep,name=extensions" json:"extensions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Container) Reset()         { *m = Container{} }
func (m *Container) String() string { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()    {}
func (*Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{3}
}
func (m *Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Container.Unmarshal(m, b)
}
func (m *Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Container.Marshal(b, m, deterministic)
}
func (dst *Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Container.Merge(dst, src)
}
func (m *Container) XXX_Size() int {
	return xxx_messageInfo_Container.Size(m)
}
func (m *Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Container proto.InternalMessageInfo

func (m *Container) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Container) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Container) GetSpec() *types.Any {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Container) GetSnapshotter() string {
	if m != nil {
		return m.Snapshotter
	}
	return ""
}

func (m *Container) GetTask() *Container_Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *Container) GetRuntime() string {
	if m != nil {
		return m.Runtime
	}
	return ""
}

func (m *Container) GetExtensions() map[string]*types.Any {
	if m != nil {
		return m.Extensions
	}
	return nil
}

type Container_Task struct {
	Pid                  uint32   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Container_Task) Reset()         { *m = Container_Task{} }
func (m *Container_Task) String() string { return proto.CompactTextString(m) }
func (*Container_Task) ProtoMessage()    {}
func (*Container_Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{3, 1}
}
func (m *Container_Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Container_Task.Unmarshal(m, b)
}
func (m *Container_Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Container_Task.Marshal(b, m, deterministic)
}
func (dst *Container_Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Container_Task.Merge(dst, src)
}
func (m *Container_Task) XXX_Size() int {
	return xxx_messageInfo_Container_Task.Size(m)
}
func (m *Container_Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Container_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Container_Task proto.InternalMessageInfo

func (m *Container_Task) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type ContainersResponse struct {
	Containers           []*Container `protobuf:"bytes,1,rep,name=containers" json:"containers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ContainersResponse) Reset()         { *m = ContainersResponse{} }
func (m *ContainersResponse) String() string { return proto.CompactTextString(m) }
func (*ContainersResponse) ProtoMessage()    {}
func (*ContainersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{4}
}
func (m *ContainersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainersResponse.Unmarshal(m, b)
}
func (m *ContainersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainersResponse.Marshal(b, m, deterministic)
}
func (dst *ContainersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainersResponse.Merge(dst, src)
}
func (m *ContainersResponse) XXX_Size() int {
	return xxx_messageInfo_ContainersResponse.Size(m)
}
func (m *ContainersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainersResponse proto.InternalMessageInfo

func (m *ContainersResponse) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

type ContainerRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerRequest) Reset()         { *m = ContainerRequest{} }
func (m *ContainerRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerRequest) ProtoMessage()    {}
func (*ContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{5}
}
func (m *ContainerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerRequest.Unmarshal(m, b)
}
func (m *ContainerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerRequest.Marshal(b, m, deterministic)
}
func (dst *ContainerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerRequest.Merge(dst, src)
}
func (m *ContainerRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerRequest.Size(m)
}
func (m *ContainerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerRequest proto.InternalMessageInfo

func (m *ContainerRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type ContainerResponse struct {
	Container            *Container `protobuf:"bytes,1,opt,name=container" json:"container,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ContainerResponse) Reset()         { *m = ContainerResponse{} }
func (m *ContainerResponse) String() string { return proto.CompactTextString(m) }
func (*ContainerResponse) ProtoMessage()    {}
func (*ContainerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{6}
}
func (m *ContainerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerResponse.Unmarshal(m, b)
}
func (m *ContainerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerResponse.Marshal(b, m, deterministic)
}
func (dst *ContainerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerResponse.Merge(dst, src)
}
func (m *ContainerResponse) XXX_Size() int {
	return xxx_messageInfo_ContainerResponse.Size(m)
}
func (m *ContainerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerResponse proto.InternalMessageInfo

func (m *ContainerResponse) GetContainer() *Container {
	if m != nil {
		return m.Container
	}
	return nil
}

type ImagesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImagesRequest) Reset()         { *m = ImagesRequest{} }
func (m *ImagesRequest) String() string { return proto.CompactTextString(m) }
func (*ImagesRequest) ProtoMessage()    {}
func (*ImagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{7}
}
func (m *ImagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagesRequest.Unmarshal(m, b)
}
func (m *ImagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagesRequest.Marshal(b, m, deterministic)
}
func (dst *ImagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagesRequest.Merge(dst, src)
}
func (m *ImagesRequest) XXX_Size() int {
	return xxx_messageInfo_ImagesRequest.Size(m)
}
func (m *ImagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImagesRequest proto.InternalMessageInfo

type Image struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{8}
}
func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (dst *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(dst, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type ImagesResponse struct {
	Images               []*Image `protobuf:"bytes,1,rep,name=images" json:"images,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImagesResponse) Reset()         { *m = ImagesResponse{} }
func (m *ImagesResponse) String() string { return proto.CompactTextString(m) }
func (*ImagesResponse) ProtoMessage()    {}
func (*ImagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{9}
}
func (m *ImagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagesResponse.Unmarshal(m, b)
}
func (m *ImagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagesResponse.Marshal(b, m, deterministic)
}
func (dst *ImagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagesResponse.Merge(dst, src)
}
func (m *ImagesResponse) XXX_Size() int {
	return xxx_messageInfo_ImagesResponse.Size(m)
}
func (m *ImagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImagesResponse proto.InternalMessageInfo

func (m *ImagesResponse) GetImages() []*Image {
	if m != nil {
		return m.Images
	}
	return nil
}

type ContainerNetworkRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IP                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Network              string   `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	Gateway              string   `protobuf:"bytes,4,opt,name=gateway,proto3" json:"gateway,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerNetworkRequest) Reset()         { *m = ContainerNetworkRequest{} }
func (m *ContainerNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerNetworkRequest) ProtoMessage()    {}
func (*ContainerNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{10}
}
func (m *ContainerNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerNetworkRequest.Unmarshal(m, b)
}
func (m *ContainerNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerNetworkRequest.Marshal(b, m, deterministic)
}
func (dst *ContainerNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerNetworkRequest.Merge(dst, src)
}
func (m *ContainerNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerNetworkRequest.Size(m)
}
func (m *ContainerNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerNetworkRequest proto.InternalMessageInfo

func (m *ContainerNetworkRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ContainerNetworkRequest) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *ContainerNetworkRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *ContainerNetworkRequest) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

type Process struct {
	Uid                  uint32   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  uint32   `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Args                 []string `protobuf:"bytes,3,rep,name=args" json:"args,omitempty"`
	Env                  []string `protobuf:"bytes,4,rep,name=env" json:"env,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Process) Reset()         { *m = Process{} }
func (m *Process) String() string { return proto.CompactTextString(m) }
func (*Process) ProtoMessage()    {}
func (*Process) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{11}
}
func (m *Process) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Process.Unmarshal(m, b)
}
func (m *Process) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Process.Marshal(b, m, deterministic)
}
func (dst *Process) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Process.Merge(dst, src)
}
func (m *Process) XXX_Size() int {
	return xxx_messageInfo_Process.Size(m)
}
func (m *Process) XXX_DiscardUnknown() {
	xxx_messageInfo_Process.DiscardUnknown(m)
}

var xxx_messageInfo_Process proto.InternalMessageInfo

func (m *Process) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Process) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *Process) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Process) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

type Mount struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Destination          string   `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	Options              []string `protobuf:"bytes,5,rep,name=options" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mount) Reset()         { *m = Mount{} }
func (m *Mount) String() string { return proto.CompactTextString(m) }
func (*Mount) ProtoMessage()    {}
func (*Mount) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{12}
}
func (m *Mount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mount.Unmarshal(m, b)
}
func (m *Mount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mount.Marshal(b, m, deterministic)
}
func (dst *Mount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mount.Merge(dst, src)
}
func (m *Mount) XXX_Size() int {
	return xxx_messageInfo_Mount.Size(m)
}
func (m *Mount) XXX_DiscardUnknown() {
	xxx_messageInfo_Mount.DiscardUnknown(m)
}

var xxx_messageInfo_Mount proto.InternalMessageInfo

func (m *Mount) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Mount) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Mount) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *Mount) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

// NOTE: this uses a custom json unmarshaller (utils.go); update if fields are changed
type Endpoint struct {
	Service  string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Protocol Protocol `protobuf:"varint,2,opt,name=protocol,proto3,enum=stellar.services.runtime.v1.Protocol" json:"protocol,omitempty"`
	Host     string   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port     uint32   `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// config is a generic map that is parsed upon unmarshal that is used to generate the Any
	Config               map[string]string `protobuf:"bytes,5,rep,name=config" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EndpointConfig       *types.Any        `protobuf:"bytes,6,opt,name=endpoint_config,json=endpointConfig" json:"endpoint_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{13}
}
func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (dst *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(dst, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

func (m *Endpoint) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Endpoint) GetProtocol() Protocol {
	if m != nil {
		return m.Protocol
	}
	return Protocol_UNKNOWN
}

func (m *Endpoint) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Endpoint) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Endpoint) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Endpoint) GetEndpointConfig() *types.Any {
	if m != nil {
		return m.EndpointConfig
	}
	return nil
}

type PlacementPreference struct {
	NodeIDs              []string          `protobuf:"bytes,1,rep,name=node_ids,json=nodeIds" json:"node_ids,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Replicas             uint64            `protobuf:"varint,3,opt,name=replicas,proto3" json:"replicas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PlacementPreference) Reset()         { *m = PlacementPreference{} }
func (m *PlacementPreference) String() string { return proto.CompactTextString(m) }
func (*PlacementPreference) ProtoMessage()    {}
func (*PlacementPreference) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{14}
}
func (m *PlacementPreference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlacementPreference.Unmarshal(m, b)
}
func (m *PlacementPreference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlacementPreference.Marshal(b, m, deterministic)
}
func (dst *PlacementPreference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlacementPreference.Merge(dst, src)
}
func (m *PlacementPreference) XXX_Size() int {
	return xxx_messageInfo_PlacementPreference.Size(m)
}
func (m *PlacementPreference) XXX_DiscardUnknown() {
	xxx_messageInfo_PlacementPreference.DiscardUnknown(m)
}

var xxx_messageInfo_PlacementPreference proto.InternalMessageInfo

func (m *PlacementPreference) GetNodeIDs() []string {
	if m != nil {
		return m.NodeIDs
	}
	return nil
}

func (m *PlacementPreference) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *PlacementPreference) GetReplicas() uint64 {
	if m != nil {
		return m.Replicas
	}
	return 0
}

type Service struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image                string               `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Runtime              string               `protobuf:"bytes,3,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Snapshotter          string               `protobuf:"bytes,4,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	Node                 string               `protobuf:"bytes,5,opt,name=node,proto3" json:"node,omitempty"`
	Process              *Process             `protobuf:"bytes,6,opt,name=process" json:"process,omitempty"`
	Labels               []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	Network              bool                 `protobuf:"varint,8,opt,name=network,proto3" json:"network,omitempty"`
	Mounts               []*Mount             `protobuf:"bytes,9,rep,name=mounts" json:"mounts,omitempty"`
	Endpoints            []*Endpoint          `protobuf:"bytes,10,rep,name=endpoints" json:"endpoints,omitempty"`
	Replicas             uint64               `protobuf:"varint,11,opt,name=replicas,proto3" json:"replicas,omitempty"`
	PlacementPreference  *PlacementPreference `protobuf:"bytes,12,opt,name=placement_preference,json=placementPreference" json:"placement_preference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{15}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (dst *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(dst, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Service) GetRuntime() string {
	if m != nil {
		return m.Runtime
	}
	return ""
}

func (m *Service) GetSnapshotter() string {
	if m != nil {
		return m.Snapshotter
	}
	return ""
}

func (m *Service) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *Service) GetProcess() *Process {
	if m != nil {
		return m.Process
	}
	return nil
}

func (m *Service) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Service) GetNetwork() bool {
	if m != nil {
		return m.Network
	}
	return false
}

func (m *Service) GetMounts() []*Mount {
	if m != nil {
		return m.Mounts
	}
	return nil
}

func (m *Service) GetEndpoints() []*Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *Service) GetReplicas() uint64 {
	if m != nil {
		return m.Replicas
	}
	return 0
}

func (m *Service) GetPlacementPreference() *PlacementPreference {
	if m != nil {
		return m.PlacementPreference
	}
	return nil
}

type CreateContainerRequest struct {
	Application          string   `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	Service              *Service `protobuf:"bytes,2,opt,name=service" json:"service,omitempty"`
	ContainerID          string   `protobuf:"bytes,3,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateContainerRequest) Reset()         { *m = CreateContainerRequest{} }
func (m *CreateContainerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateContainerRequest) ProtoMessage()    {}
func (*CreateContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{16}
}
func (m *CreateContainerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateContainerRequest.Unmarshal(m, b)
}
func (m *CreateContainerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateContainerRequest.Marshal(b, m, deterministic)
}
func (dst *CreateContainerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateContainerRequest.Merge(dst, src)
}
func (m *CreateContainerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateContainerRequest.Size(m)
}
func (m *CreateContainerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateContainerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateContainerRequest proto.InternalMessageInfo

func (m *CreateContainerRequest) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *CreateContainerRequest) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *CreateContainerRequest) GetContainerID() string {
	if m != nil {
		return m.ContainerID
	}
	return ""
}

type DeleteContainerRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteContainerRequest) Reset()         { *m = DeleteContainerRequest{} }
func (m *DeleteContainerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteContainerRequest) ProtoMessage()    {}
func (*DeleteContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{17}
}
func (m *DeleteContainerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteContainerRequest.Unmarshal(m, b)
}
func (m *DeleteContainerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteContainerRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteContainerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteContainerRequest.Merge(dst, src)
}
func (m *DeleteContainerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteContainerRequest.Size(m)
}
func (m *DeleteContainerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteContainerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteContainerRequest proto.InternalMessageInfo

func (m *DeleteContainerRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type RestartContainerRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestartContainerRequest) Reset()         { *m = RestartContainerRequest{} }
func (m *RestartContainerRequest) String() string { return proto.CompactTextString(m) }
func (*RestartContainerRequest) ProtoMessage()    {}
func (*RestartContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_1a92da520e08b6e3, []int{18}
}
func (m *RestartContainerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestartContainerRequest.Unmarshal(m, b)
}
func (m *RestartContainerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestartContainerRequest.Marshal(b, m, deterministic)
}
func (dst *RestartContainerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestartContainerRequest.Merge(dst, src)
}
func (m *RestartContainerRequest) XXX_Size() int {
	return xxx_messageInfo_RestartContainerRequest.Size(m)
}
func (m *RestartContainerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestartContainerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestartContainerRequest proto.InternalMessageInfo

func (m *RestartContainerRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func init() {
	proto.RegisterType((*InfoRequest)(nil), "stellar.services.runtime.v1.InfoRequest")
	proto.RegisterType((*InfoResponse)(nil), "stellar.services.runtime.v1.InfoResponse")
	proto.RegisterType((*ContainersRequest)(nil), "stellar.services.runtime.v1.ContainersRequest")
	proto.RegisterType((*Container)(nil), "stellar.services.runtime.v1.Container")
	proto.RegisterMapType((map[string]*types.Any)(nil), "stellar.services.runtime.v1.Container.ExtensionsEntry")
	proto.RegisterMapType((map[string]string)(nil), "stellar.services.runtime.v1.Container.LabelsEntry")
	proto.RegisterType((*Container_Task)(nil), "stellar.services.runtime.v1.Container.Task")
	proto.RegisterType((*ContainersResponse)(nil), "stellar.services.runtime.v1.ContainersResponse")
	proto.RegisterType((*ContainerRequest)(nil), "stellar.services.runtime.v1.ContainerRequest")
	proto.RegisterType((*ContainerResponse)(nil), "stellar.services.runtime.v1.ContainerResponse")
	proto.RegisterType((*ImagesRequest)(nil), "stellar.services.runtime.v1.ImagesRequest")
	proto.RegisterType((*Image)(nil), "stellar.services.runtime.v1.Image")
	proto.RegisterType((*ImagesResponse)(nil), "stellar.services.runtime.v1.ImagesResponse")
	proto.RegisterType((*ContainerNetworkRequest)(nil), "stellar.services.runtime.v1.ContainerNetworkRequest")
	proto.RegisterType((*Process)(nil), "stellar.services.runtime.v1.Process")
	proto.RegisterType((*Mount)(nil), "stellar.services.runtime.v1.Mount")
	proto.RegisterType((*Endpoint)(nil), "stellar.services.runtime.v1.Endpoint")
	proto.RegisterMapType((map[string]string)(nil), "stellar.services.runtime.v1.Endpoint.ConfigEntry")
	proto.RegisterType((*PlacementPreference)(nil), "stellar.services.runtime.v1.PlacementPreference")
	proto.RegisterMapType((map[string]string)(nil), "stellar.services.runtime.v1.PlacementPreference.LabelsEntry")
	proto.RegisterType((*Service)(nil), "stellar.services.runtime.v1.Service")
	proto.RegisterType((*CreateContainerRequest)(nil), "stellar.services.runtime.v1.CreateContainerRequest")
	proto.RegisterType((*DeleteContainerRequest)(nil), "stellar.services.runtime.v1.DeleteContainerRequest")
	proto.RegisterType((*RestartContainerRequest)(nil), "stellar.services.runtime.v1.RestartContainerRequest")
	proto.RegisterEnum("stellar.services.runtime.v1.Protocol", Protocol_name, Protocol_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	Containers(ctx context.Context, in *ContainersRequest, opts ...grpc.CallOption) (*ContainersResponse, error)
	Container(ctx context.Context, in *ContainerRequest, opts ...grpc.CallOption) (*ContainerResponse, error)
	Images(ctx context.Context, in *ImagesRequest, opts ...grpc.CallOption) (*ImagesResponse, error)
	SetupContainerNetwork(ctx context.Context, in *ContainerNetworkRequest, opts ...grpc.CallOption) (*types.Empty, error)
	CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*types.Empty, error)
	DeleteContainer(ctx context.Context, in *DeleteContainerRequest, opts ...grpc.CallOption) (*types.Empty, error)
	RestartContainer(ctx context.Context, in *RestartContainerRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/stellar.services.runtime.v1.Node/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) Containers(ctx context.Context, in *ContainersRequest, opts ...grpc.CallOption) (*ContainersResponse, error) {
	out := new(ContainersResponse)
	err := c.cc.Invoke(ctx, "/stellar.services.runtime.v1.Node/Containers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) Container(ctx context.Context, in *ContainerRequest, opts ...grpc.CallOption) (*ContainerResponse, error) {
	out := new(ContainerResponse)
	err := c.cc.Invoke(ctx, "/stellar.services.runtime.v1.Node/Container", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) Images(ctx context.Context, in *ImagesRequest, opts ...grpc.CallOption) (*ImagesResponse, error) {
	out := new(ImagesResponse)
	err := c.cc.Invoke(ctx, "/stellar.services.runtime.v1.Node/Images", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) SetupContainerNetwork(ctx context.Context, in *ContainerNetworkRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/stellar.services.runtime.v1.Node/SetupContainerNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/stellar.services.runtime.v1.Node/CreateContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) DeleteContainer(ctx context.Context, in *DeleteContainerRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/stellar.services.runtime.v1.Node/DeleteContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) RestartContainer(ctx context.Context, in *RestartContainerRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/stellar.services.runtime.v1.Node/RestartContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	Info(context.Context, *InfoRequest) (*InfoResponse, error)
	Containers(context.Context, *ContainersRequest) (*ContainersResponse, error)
	Container(context.Context, *ContainerRequest) (*ContainerResponse, error)
	Images(context.Context, *ImagesRequest) (*ImagesResponse, error)
	SetupContainerNetwork(context.Context, *ContainerNetworkRequest) (*types.Empty, error)
	CreateContainer(context.Context, *CreateContainerRequest) (*types.Empty, error)
	DeleteContainer(context.Context, *DeleteContainerRequest) (*types.Empty, error)
	RestartContainer(context.Context, *RestartContainerRequest) (*types.Empty, error)
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.runtime.v1.Node/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_Containers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Containers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.runtime.v1.Node/Containers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Containers(ctx, req.(*ContainersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_Container_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Container(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.runtime.v1.Node/Container",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Container(ctx, req.(*ContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_Images_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Images(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.runtime.v1.Node/Images",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Images(ctx, req.(*ImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_SetupContainerNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).SetupContainerNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.runtime.v1.Node/SetupContainerNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).SetupContainerNetwork(ctx, req.(*ContainerNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_CreateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).CreateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.runtime.v1.Node/CreateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).CreateContainer(ctx, req.(*CreateContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_DeleteContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).DeleteContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.runtime.v1.Node/DeleteContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).DeleteContainer(ctx, req.(*DeleteContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_RestartContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestartContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).RestartContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.runtime.v1.Node/RestartContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).RestartContainer(ctx, req.(*RestartContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stellar.services.runtime.v1.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Info",
			Handler:    _Node_Info_Handler,
		},
		{
			MethodName: "Containers",
			Handler:    _Node_Containers_Handler,
		},
		{
			MethodName: "Container",
			Handler:    _Node_Container_Handler,
		},
		{
			MethodName: "Images",
			Handler:    _Node_Images_Handler,
		},
		{
			MethodName: "SetupContainerNetwork",
			Handler:    _Node_SetupContainerNetwork_Handler,
		},
		{
			MethodName: "CreateContainer",
			Handler:    _Node_CreateContainer_Handler,
		},
		{
			MethodName: "DeleteContainer",
			Handler:    _Node_DeleteContainer_Handler,
		},
		{
			MethodName: "RestartContainer",
			Handler:    _Node_RestartContainer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/ehazlett/stellar/api/services/runtime/v1/runtime.proto",
}

func init() {
	proto.RegisterFile("github.com/ehazlett/stellar/api/services/runtime/v1/runtime.proto", fileDescriptor_runtime_1a92da520e08b6e3)
}

var fileDescriptor_runtime_1a92da520e08b6e3 = []byte{
	// 1268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xdf, 0x73, 0xdb, 0xc4,
	0x13, 0xff, 0xda, 0x56, 0xfc, 0x63, 0xd5, 0x34, 0xfe, 0x5e, 0x43, 0x2a, 0xdc, 0x87, 0x78, 0x34,
	0xb4, 0x63, 0xd2, 0xa9, 0xdc, 0x38, 0x0c, 0x03, 0x29, 0x85, 0x49, 0xe2, 0x30, 0x18, 0x4a, 0xf0,
	0x5c, 0x52, 0x18, 0x7e, 0x0c, 0x41, 0x91, 0xce, 0x8e, 0x88, 0xac, 0x13, 0xba, 0x73, 0x8a, 0x99,
	0xe1, 0x1f, 0xe2, 0xa1, 0x7f, 0x0d, 0xcf, 0x79, 0xc8, 0x23, 0xff, 0x00, 0xaf, 0xcc, 0x9d, 0x4e,
	0xb2, 0xe2, 0xc4, 0x8e, 0x0a, 0x6f, 0xbb, 0x77, 0xfb, 0x4b, 0xbb, 0x9f, 0xdd, 0x3d, 0xc1, 0xce,
	0xd0, 0xe3, 0xa7, 0xe3, 0x13, 0xcb, 0xa1, 0xa3, 0x36, 0x39, 0xb5, 0x7f, 0xf3, 0x09, 0xe7, 0x6d,
	0xc6, 0x89, 0xef, 0xdb, 0x51, 0xdb, 0x0e, 0xbd, 0x36, 0x23, 0xd1, 0xb9, 0xe7, 0x10, 0xd6, 0x8e,
	0xc6, 0x01, 0xf7, 0x46, 0xa4, 0x7d, 0xbe, 0x99, 0x90, 0x56, 0x18, 0x51, 0x4e, 0xd1, 0x03, 0x25,
	0x6e, 0x25, 0xa2, 0x56, 0x72, 0x7f, 0xbe, 0xd9, 0x58, 0x1d, 0xd2, 0x21, 0x95, 0x72, 0x6d, 0x41,
	0xc5, 0x2a, 0x8d, 0xb7, 0x87, 0x94, 0x0e, 0x7d, 0xd2, 0x96, 0xdc, 0xc9, 0x78, 0xd0, 0xb6, 0x83,
	0x89, 0xba, 0x7a, 0x30, 0x7b, 0x45, 0x46, 0x21, 0x57, 0x97, 0xe6, 0x32, 0xe8, 0xbd, 0x60, 0x40,
	0x31, 0xf9, 0x65, 0x4c, 0x18, 0x37, 0x1f, 0xc1, 0x9d, 0x98, 0x65, 0x21, 0x0d, 0x18, 0x41, 0x6b,
	0x50, 0xf4, 0x5c, 0xa3, 0xd0, 0x2c, 0xb4, 0x6a, 0xbb, 0xe5, 0xcb, 0x8b, 0xf5, 0x62, 0xaf, 0x8b,
	0x8b, 0x9e, 0x6b, 0x3e, 0x81, 0xff, 0xef, 0xd1, 0x80, 0xdb, 0x5e, 0x40, 0x22, 0xa6, 0x94, 0x91,
	0x01, 0x95, 0x81, 0xe7, 0x73, 0x12, 0x31, 0xa3, 0xd0, 0x2c, 0xb5, 0x6a, 0x38, 0x61, 0xcd, 0xd7,
	0x1a, 0xd4, 0x52, 0xf9, 0x79, 0x46, 0xd1, 0x2a, 0x2c, 0x79, 0x23, 0x7b, 0x48, 0x8c, 0xa2, 0xb8,
	0xc2, 0x31, 0x83, 0x3e, 0x87, 0xb2, 0x6f, 0x9f, 0x10, 0x9f, 0x19, 0xa5, 0x66, 0xa9, 0xa5, 0x77,
	0x3a, 0xd6, 0x82, 0xec, 0x58, 0xa9, 0x17, 0xeb, 0x85, 0x54, 0xda, 0x0f, 0x78, 0x34, 0xc1, 0xca,
	0x02, 0x6a, 0x81, 0xc6, 0x42, 0xe2, 0x18, 0x5a, 0xb3, 0xd0, 0xd2, 0x3b, 0xab, 0x56, 0x9c, 0x19,
	0x2b, 0xc9, 0x8c, 0xb5, 0x13, 0x4c, 0xb0, 0x94, 0x40, 0x4d, 0xd0, 0x59, 0x60, 0x87, 0xec, 0x94,
	0x72, 0x4e, 0x22, 0x63, 0x49, 0x46, 0x94, 0x3d, 0x42, 0x9f, 0x80, 0xc6, 0x6d, 0x76, 0x66, 0x94,
	0xa5, 0xad, 0xc7, 0x39, 0xa3, 0x3a, 0xb2, 0xd9, 0x19, 0x96, 0x8a, 0x22, 0x5d, 0x4a, 0xc4, 0xa8,
	0x48, 0xf3, 0x09, 0x8b, 0xbe, 0x06, 0x20, 0xbf, 0x72, 0x12, 0x30, 0x8f, 0x06, 0xcc, 0xa8, 0xca,
	0xcf, 0x7e, 0x3f, 0xa7, 0x83, 0xfd, 0x54, 0x31, 0xfe, 0xf4, 0x8c, 0xa5, 0xc6, 0x87, 0xa0, 0x67,
	0xb2, 0x82, 0xea, 0x50, 0x3a, 0x23, 0x93, 0xb8, 0x10, 0x58, 0x90, 0xa2, 0x02, 0xe7, 0xb6, 0x3f,
	0x4e, 0x2b, 0x20, 0x99, 0xed, 0xe2, 0x07, 0x85, 0x86, 0x01, 0x9a, 0x08, 0x5d, 0xe8, 0x84, 0xaa,
	0x78, 0xcb, 0x58, 0x90, 0x8d, 0x43, 0x58, 0x99, 0xf1, 0x79, 0x83, 0xe1, 0x8d, 0xac, 0xe1, 0x79,
	0x99, 0x9f, 0xba, 0x33, 0x7f, 0x00, 0x94, 0xc5, 0x97, 0x42, 0xe3, 0xa7, 0x00, 0x4e, 0x7a, 0x2a,
	0x31, 0xa6, 0x77, 0x1e, 0xe5, 0xcb, 0x0b, 0xce, 0x68, 0x9a, 0x1b, 0x50, 0x9f, 0x5e, 0x28, 0xf0,
	0xce, 0x43, 0xfa, 0xb7, 0x19, 0xa4, 0xa7, 0x81, 0x74, 0xa1, 0x96, 0x9a, 0x93, 0x3a, 0xf9, 0xe3,
	0x98, 0x2a, 0x9a, 0x2b, 0xb0, 0xdc, 0x13, 0x10, 0x4f, 0x1a, 0xc8, 0x5c, 0x87, 0x25, 0x79, 0x30,
	0x37, 0x98, 0x17, 0x70, 0x37, 0xd1, 0x50, 0x91, 0x6c, 0x43, 0x59, 0xb6, 0x49, 0x92, 0x0e, 0x73,
	0x61, 0x18, 0x52, 0x19, 0x2b, 0x0d, 0xf3, 0x77, 0xb8, 0x9f, 0xc6, 0x75, 0x40, 0xf8, 0x2b, 0x1a,
	0x9d, 0xdd, 0x92, 0x0d, 0x79, 0x1e, 0xc6, 0xe8, 0x50, 0xe7, 0x7d, 0x5c, 0xf4, 0x42, 0x81, 0xe5,
	0x20, 0xb6, 0x60, 0x94, 0x62, 0x2c, 0x2b, 0x56, 0xdc, 0x0c, 0x6d, 0x4e, 0x5e, 0xd9, 0x13, 0xd9,
	0x75, 0x35, 0x9c, 0xb0, 0xe6, 0x21, 0x54, 0xfa, 0x11, 0x75, 0x08, 0x63, 0x02, 0x30, 0xe3, 0x29,
	0xaa, 0xc6, 0x9e, 0x2b, 0x4e, 0x86, 0x9e, 0x2b, 0x3d, 0x2d, 0x63, 0x41, 0x22, 0x04, 0x9a, 0x1d,
	0x0d, 0xe3, 0x29, 0x50, 0xc3, 0x92, 0x16, 0x52, 0x24, 0x38, 0x37, 0x34, 0x79, 0x24, 0x48, 0x93,
	0xc2, 0xd2, 0x97, 0x74, 0x1c, 0x70, 0x21, 0xce, 0x27, 0x21, 0x51, 0x20, 0x94, 0x34, 0x5a, 0x83,
	0x32, 0xa3, 0xe3, 0xc8, 0x49, 0xf0, 0xad, 0x38, 0xd1, 0xec, 0x2e, 0x61, 0xdc, 0x0b, 0x6c, 0xee,
	0xd1, 0x40, 0xc5, 0x99, 0x3d, 0x12, 0x5f, 0x41, 0x43, 0x2e, 0xdb, 0x71, 0x29, 0x1e, 0x6d, 0x8a,
	0x35, 0xff, 0x2c, 0x42, 0x75, 0x3f, 0x70, 0x43, 0xea, 0x05, 0x72, 0x02, 0xaa, 0xb4, 0x2b, 0xbf,
	0x09, 0x8b, 0x76, 0xa0, 0x2a, 0xb1, 0xee, 0x50, 0x5f, 0x3a, 0xbf, 0xdb, 0x79, 0xb8, 0xb0, 0x52,
	0x7d, 0x25, 0x8c, 0x53, 0x35, 0xf1, 0x45, 0xa7, 0x94, 0x71, 0x95, 0x60, 0x49, 0x8b, 0xb3, 0x90,
	0x46, 0x5c, 0x86, 0xbc, 0x8c, 0x25, 0x8d, 0x7a, 0x50, 0x76, 0x68, 0x30, 0xf0, 0x86, 0x32, 0x54,
	0xbd, 0xb3, 0xb9, 0xd0, 0x51, 0x12, 0xbb, 0x80, 0xe8, 0xc0, 0x1b, 0xaa, 0x79, 0x19, 0x1b, 0x40,
	0xcf, 0x61, 0x85, 0xa8, 0xfb, 0x63, 0x65, 0xb3, 0xbc, 0xa0, 0x81, 0xef, 0x26, 0xc2, 0xb1, 0x2d,
	0x31, 0x6f, 0x32, 0x56, 0xdf, 0x64, 0xde, 0x98, 0x7f, 0x15, 0xe0, 0x5e, 0xdf, 0xb7, 0x1d, 0x32,
	0x22, 0x01, 0xef, 0x47, 0x64, 0x40, 0x22, 0x12, 0x38, 0x04, 0x3d, 0x82, 0x6a, 0x40, 0x5d, 0x72,
	0xec, 0xb9, 0x6a, 0xc9, 0xec, 0xea, 0x97, 0x17, 0xeb, 0x95, 0x03, 0xea, 0x92, 0x5e, 0x97, 0xe1,
	0x8a, 0xb8, 0xec, 0xb9, 0x0c, 0x1d, 0xa5, 0x5b, 0xa3, 0x28, 0x93, 0xf0, 0xd1, 0xe2, 0x6c, 0x5f,
	0xf7, 0x74, 0xe3, 0xfe, 0x68, 0x40, 0x35, 0x22, 0xa1, 0xef, 0x39, 0x36, 0x93, 0x65, 0xd0, 0x70,
	0xca, 0xff, 0x87, 0xe1, 0x6a, 0xfe, 0x5d, 0x82, 0xca, 0xa1, 0x02, 0x0a, 0x02, 0x2d, 0xb0, 0x47,
	0x29, 0x6e, 0x05, 0x3d, 0x67, 0x31, 0x66, 0xf6, 0x47, 0xe9, 0xea, 0xfe, 0x98, 0x59, 0x5e, 0xda,
	0xf5, 0xe5, 0x25, 0xbc, 0x50, 0x97, 0xa8, 0xbd, 0x26, 0x69, 0xf4, 0x31, 0x54, 0xc2, 0xb8, 0x1f,
	0x55, 0x91, 0xdf, 0xb9, 0x0d, 0xa1, 0x42, 0x16, 0x27, 0x4a, 0xa2, 0xbb, 0x54, 0xca, 0x2b, 0xb2,
	0x45, 0x92, 0xa4, 0x65, 0x66, 0x43, 0xb5, 0x59, 0x68, 0x55, 0xa7, 0xb3, 0x61, 0x1b, 0xca, 0x23,
	0xd1, 0xac, 0xcc, 0xa8, 0xe5, 0x18, 0x5e, 0xb2, 0xaf, 0xb1, 0xd2, 0x40, 0x7b, 0x50, 0x4b, 0xd0,
	0xc6, 0x0c, 0x90, 0xea, 0x0f, 0x73, 0x01, 0x1d, 0x4f, 0xf5, 0xae, 0xd4, 0x53, 0xbf, 0x5a, 0x4f,
	0xe4, 0xc0, 0x6a, 0x98, 0xc0, 0xe2, 0x38, 0x4c, 0x71, 0x61, 0xdc, 0x91, 0xb9, 0x79, 0xfa, 0xa6,
	0x78, 0xc2, 0xf7, 0xc2, 0xeb, 0x87, 0xe6, 0xeb, 0x02, 0xac, 0xed, 0x45, 0xc4, 0xe6, 0xe4, 0xda,
	0x42, 0x6a, 0x82, 0x6e, 0x87, 0x32, 0x16, 0x39, 0x94, 0x62, 0x3c, 0x64, 0x8f, 0x44, 0xc1, 0x92,
	0x69, 0x53, 0xcc, 0x51, 0x30, 0x85, 0xb0, 0xe9, 0x4c, 0xea, 0xc0, 0x9d, 0x74, 0x19, 0x1d, 0x7b,
	0x6e, 0x8c, 0xa2, 0xdd, 0x95, 0xcb, 0x8b, 0x75, 0x3d, 0x8d, 0xa6, 0xd7, 0xc5, 0x7a, 0x2a, 0xd4,
	0x73, 0xcd, 0xa7, 0xb0, 0xd6, 0x25, 0x3e, 0xb9, 0x21, 0xde, 0x79, 0x3b, 0x6b, 0x13, 0xee, 0x63,
	0xc2, 0xb8, 0x1d, 0xf1, 0xbc, 0x2a, 0x1b, 0x5b, 0x50, 0x4d, 0xe6, 0x1f, 0xd2, 0xa1, 0xf2, 0xf2,
	0xe0, 0x8b, 0x83, 0xaf, 0xbe, 0x39, 0xa8, 0xff, 0x0f, 0x55, 0xa0, 0x74, 0xb4, 0xd7, 0xaf, 0x17,
	0x04, 0xf1, 0xb2, 0xdb, 0xaf, 0x17, 0x51, 0x15, 0xb4, 0xcf, 0x8e, 0x8e, 0xfa, 0xf5, 0x52, 0xe7,
	0x8f, 0x32, 0x68, 0x62, 0x0c, 0xa0, 0xef, 0x41, 0x13, 0x6f, 0x58, 0xd4, 0x5a, 0xbc, 0x0a, 0xa7,
	0xaf, 0xde, 0xc6, 0xbb, 0x39, 0x24, 0xd5, 0xbe, 0x1d, 0x01, 0x4c, 0x1f, 0x26, 0xc8, 0xca, 0xb7,
	0xf4, 0x93, 0x05, 0xdf, 0x68, 0xe7, 0x96, 0x57, 0xee, 0x7e, 0xce, 0xbe, 0x9b, 0x9f, 0xe4, 0x7c,
	0x62, 0x28, 0x67, 0x56, 0x5e, 0x71, 0xe5, 0xcb, 0x86, 0x72, 0xfc, 0xb8, 0x40, 0x1b, 0xb7, 0x3f,
	0x22, 0xd2, 0x4f, 0x7a, 0x9c, 0x4b, 0x56, 0xb9, 0x20, 0xf0, 0xd6, 0x21, 0xe1, 0xe3, 0x70, 0xf6,
	0xd9, 0x81, 0xde, 0xcb, 0x17, 0xeb, 0xd5, 0x57, 0x4a, 0x63, 0xed, 0xda, 0x16, 0xda, 0x17, 0xbf,
	0x36, 0xe8, 0x47, 0x58, 0x99, 0x69, 0x2a, 0xb4, 0xb5, 0xd8, 0xc1, 0x8d, 0x2d, 0xb8, 0xc8, 0xfe,
	0x4c, 0x13, 0xdc, 0x62, 0xff, 0xe6, 0x96, 0x99, 0x6b, 0xff, 0x27, 0xa8, 0xcf, 0xb6, 0xcc, 0x2d,
	0x19, 0x9a, 0xd3, 0x61, 0xf3, 0x3c, 0xec, 0x3e, 0xff, 0xee, 0xd9, 0xbf, 0xf8, 0x4d, 0x7d, 0xa6,
	0xc8, 0x93, 0xb2, 0x34, 0xb7, 0xf5, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x99, 0x46, 0x46,
	0xec, 0x0e, 0x00, 0x00,
}
