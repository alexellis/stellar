// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/ehazlett/stellar/api/services/datastore/v1/datastore.proto

package datastore

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type SyncAction int32

const (
	SyncAction_SET    SyncAction = 0
	SyncAction_DELETE SyncAction = 1
)

var SyncAction_name = map[int32]string{
	0: "SET",
	1: "DELETE",
}

var SyncAction_value = map[string]int32{
	"SET":    0,
	"DELETE": 1,
}

func (x SyncAction) String() string {
	return proto.EnumName(SyncAction_name, int32(x))
}

func (SyncAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{0}
}

type InfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{0}
}
func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (m *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(m, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

type InfoResponse struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{1}
}
func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (m *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(m, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type AcquireLockRequest struct {
	Timeout              *types.Duration `protobuf:"bytes,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AcquireLockRequest) Reset()         { *m = AcquireLockRequest{} }
func (m *AcquireLockRequest) String() string { return proto.CompactTextString(m) }
func (*AcquireLockRequest) ProtoMessage()    {}
func (*AcquireLockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{2}
}
func (m *AcquireLockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireLockRequest.Unmarshal(m, b)
}
func (m *AcquireLockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireLockRequest.Marshal(b, m, deterministic)
}
func (m *AcquireLockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireLockRequest.Merge(m, src)
}
func (m *AcquireLockRequest) XXX_Size() int {
	return xxx_messageInfo_AcquireLockRequest.Size(m)
}
func (m *AcquireLockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireLockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireLockRequest proto.InternalMessageInfo

func (m *AcquireLockRequest) GetTimeout() *types.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

type ReleaseLockRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseLockRequest) Reset()         { *m = ReleaseLockRequest{} }
func (m *ReleaseLockRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseLockRequest) ProtoMessage()    {}
func (*ReleaseLockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{3}
}
func (m *ReleaseLockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseLockRequest.Unmarshal(m, b)
}
func (m *ReleaseLockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseLockRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseLockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseLockRequest.Merge(m, src)
}
func (m *ReleaseLockRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseLockRequest.Size(m)
}
func (m *ReleaseLockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseLockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseLockRequest proto.InternalMessageInfo

type CreateBucketRequest struct {
	Bucket               string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBucketRequest) Reset()         { *m = CreateBucketRequest{} }
func (m *CreateBucketRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBucketRequest) ProtoMessage()    {}
func (*CreateBucketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{4}
}
func (m *CreateBucketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBucketRequest.Unmarshal(m, b)
}
func (m *CreateBucketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBucketRequest.Marshal(b, m, deterministic)
}
func (m *CreateBucketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBucketRequest.Merge(m, src)
}
func (m *CreateBucketRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBucketRequest.Size(m)
}
func (m *CreateBucketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBucketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBucketRequest proto.InternalMessageInfo

func (m *CreateBucketRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

type SetRequest struct {
	Bucket               string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Sync                 bool     `protobuf:"varint,4,opt,name=sync,proto3" json:"sync,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{5}
}
func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

func (m *SetRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *SetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SetRequest) GetSync() bool {
	if m != nil {
		return m.Sync
	}
	return false
}

type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{6}
}
func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type GetRequest struct {
	Bucket               string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{7}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type SearchRequest struct {
	Bucket               string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Prefix               string   `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{8}
}
func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *SearchRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

type SearchResponse struct {
	Bucket               string      `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Data                 []*KeyValue `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{9}
}
func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *SearchResponse) GetData() []*KeyValue {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetResponse struct {
	Bucket               string    `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Data                 *KeyValue `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{10}
}
func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *GetResponse) GetData() *KeyValue {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteRequest struct {
	Bucket               string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Sync                 bool     `protobuf:"varint,3,opt,name=sync,proto3" json:"sync,omitempty"`
	NoTombstone          bool     `protobuf:"varint,4,opt,name=no_tombstone,json=noTombstone,proto3" json:"no_tombstone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{11}
}
func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *DeleteRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DeleteRequest) GetSync() bool {
	if m != nil {
		return m.Sync
	}
	return false
}

func (m *DeleteRequest) GetNoTombstone() bool {
	if m != nil {
		return m.NoTombstone
	}
	return false
}

type BackupRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupRequest) Reset()         { *m = BackupRequest{} }
func (m *BackupRequest) String() string { return proto.CompactTextString(m) }
func (*BackupRequest) ProtoMessage()    {}
func (*BackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{12}
}
func (m *BackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupRequest.Unmarshal(m, b)
}
func (m *BackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupRequest.Marshal(b, m, deterministic)
}
func (m *BackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupRequest.Merge(m, src)
}
func (m *BackupRequest) XXX_Size() int {
	return xxx_messageInfo_BackupRequest.Size(m)
}
func (m *BackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupRequest proto.InternalMessageInfo

type BackupResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupResponse) Reset()         { *m = BackupResponse{} }
func (m *BackupResponse) String() string { return proto.CompactTextString(m) }
func (*BackupResponse) ProtoMessage()    {}
func (*BackupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{13}
}
func (m *BackupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupResponse.Unmarshal(m, b)
}
func (m *BackupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupResponse.Marshal(b, m, deterministic)
}
func (m *BackupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupResponse.Merge(m, src)
}
func (m *BackupResponse) XXX_Size() int {
	return xxx_messageInfo_BackupResponse.Size(m)
}
func (m *BackupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BackupResponse proto.InternalMessageInfo

func (m *BackupResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RestoreRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestoreRequest) Reset()         { *m = RestoreRequest{} }
func (m *RestoreRequest) String() string { return proto.CompactTextString(m) }
func (*RestoreRequest) ProtoMessage()    {}
func (*RestoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{14}
}
func (m *RestoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreRequest.Unmarshal(m, b)
}
func (m *RestoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreRequest.Marshal(b, m, deterministic)
}
func (m *RestoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreRequest.Merge(m, src)
}
func (m *RestoreRequest) XXX_Size() int {
	return xxx_messageInfo_RestoreRequest.Size(m)
}
func (m *RestoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreRequest proto.InternalMessageInfo

func (m *RestoreRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SyncRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncRequest) Reset()         { *m = SyncRequest{} }
func (m *SyncRequest) String() string { return proto.CompactTextString(m) }
func (*SyncRequest) ProtoMessage()    {}
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{15}
}
func (m *SyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncRequest.Unmarshal(m, b)
}
func (m *SyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncRequest.Marshal(b, m, deterministic)
}
func (m *SyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncRequest.Merge(m, src)
}
func (m *SyncRequest) XXX_Size() int {
	return xxx_messageInfo_SyncRequest.Size(m)
}
func (m *SyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncRequest proto.InternalMessageInfo

type SyncOperation struct {
	Action               SyncAction `protobuf:"varint,1,opt,name=action,proto3,enum=stellar.services.datastore.v1.SyncAction" json:"action,omitempty"`
	Bucket               string     `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key                  string     `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte     `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SyncOperation) Reset()         { *m = SyncOperation{} }
func (m *SyncOperation) String() string { return proto.CompactTextString(m) }
func (*SyncOperation) ProtoMessage()    {}
func (*SyncOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{16}
}
func (m *SyncOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncOperation.Unmarshal(m, b)
}
func (m *SyncOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncOperation.Marshal(b, m, deterministic)
}
func (m *SyncOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncOperation.Merge(m, src)
}
func (m *SyncOperation) XXX_Size() int {
	return xxx_messageInfo_SyncOperation.Size(m)
}
func (m *SyncOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncOperation.DiscardUnknown(m)
}

var xxx_messageInfo_SyncOperation proto.InternalMessageInfo

func (m *SyncOperation) GetAction() SyncAction {
	if m != nil {
		return m.Action
	}
	return SyncAction_SET
}

func (m *SyncOperation) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *SyncOperation) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SyncOperation) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PeerSyncRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerSyncRequest) Reset()         { *m = PeerSyncRequest{} }
func (m *PeerSyncRequest) String() string { return proto.CompactTextString(m) }
func (*PeerSyncRequest) ProtoMessage()    {}
func (*PeerSyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704b2444211b6092, []int{17}
}
func (m *PeerSyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerSyncRequest.Unmarshal(m, b)
}
func (m *PeerSyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerSyncRequest.Marshal(b, m, deterministic)
}
func (m *PeerSyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerSyncRequest.Merge(m, src)
}
func (m *PeerSyncRequest) XXX_Size() int {
	return xxx_messageInfo_PeerSyncRequest.Size(m)
}
func (m *PeerSyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerSyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeerSyncRequest proto.InternalMessageInfo

func (m *PeerSyncRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *PeerSyncRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterEnum("stellar.services.datastore.v1.SyncAction", SyncAction_name, SyncAction_value)
	proto.RegisterType((*InfoRequest)(nil), "stellar.services.datastore.v1.InfoRequest")
	proto.RegisterType((*InfoResponse)(nil), "stellar.services.datastore.v1.InfoResponse")
	proto.RegisterType((*AcquireLockRequest)(nil), "stellar.services.datastore.v1.AcquireLockRequest")
	proto.RegisterType((*ReleaseLockRequest)(nil), "stellar.services.datastore.v1.ReleaseLockRequest")
	proto.RegisterType((*CreateBucketRequest)(nil), "stellar.services.datastore.v1.CreateBucketRequest")
	proto.RegisterType((*SetRequest)(nil), "stellar.services.datastore.v1.SetRequest")
	proto.RegisterType((*KeyValue)(nil), "stellar.services.datastore.v1.KeyValue")
	proto.RegisterType((*GetRequest)(nil), "stellar.services.datastore.v1.GetRequest")
	proto.RegisterType((*SearchRequest)(nil), "stellar.services.datastore.v1.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "stellar.services.datastore.v1.SearchResponse")
	proto.RegisterType((*GetResponse)(nil), "stellar.services.datastore.v1.GetResponse")
	proto.RegisterType((*DeleteRequest)(nil), "stellar.services.datastore.v1.DeleteRequest")
	proto.RegisterType((*BackupRequest)(nil), "stellar.services.datastore.v1.BackupRequest")
	proto.RegisterType((*BackupResponse)(nil), "stellar.services.datastore.v1.BackupResponse")
	proto.RegisterType((*RestoreRequest)(nil), "stellar.services.datastore.v1.RestoreRequest")
	proto.RegisterType((*SyncRequest)(nil), "stellar.services.datastore.v1.SyncRequest")
	proto.RegisterType((*SyncOperation)(nil), "stellar.services.datastore.v1.SyncOperation")
	proto.RegisterType((*PeerSyncRequest)(nil), "stellar.services.datastore.v1.PeerSyncRequest")
}

func init() {
	proto.RegisterFile("github.com/ehazlett/stellar/api/services/datastore/v1/datastore.proto", fileDescriptor_704b2444211b6092)
}

var fileDescriptor_704b2444211b6092 = []byte{
	// 781 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x96, 0x6d, 0x4f, 0xdb, 0x48,
	0x10, 0xc7, 0xcf, 0x71, 0xce, 0x09, 0x93, 0x07, 0xd0, 0x1e, 0x8a, 0x72, 0x39, 0xdd, 0x5d, 0xb0,
	0xd0, 0x5d, 0x8e, 0x03, 0xbb, 0x04, 0xa9, 0x6f, 0x78, 0x81, 0x12, 0x12, 0x51, 0x54, 0xd4, 0x22,
	0x07, 0x55, 0x15, 0xaa, 0x44, 0x1d, 0x67, 0x08, 0x56, 0x12, 0xaf, 0xb1, 0xd7, 0x51, 0xd3, 0x8f,
	0xd1, 0xcf, 0xd5, 0xcf, 0xd0, 0x17, 0xfd, 0x24, 0x95, 0xed, 0x35, 0x31, 0x90, 0x74, 0x03, 0xef,
	0x76, 0x76, 0x67, 0xfe, 0x33, 0xbb, 0x33, 0xfe, 0xc9, 0xd0, 0x1d, 0xda, 0xec, 0x26, 0xe8, 0x6b,
	0x16, 0x9d, 0xe8, 0x78, 0x63, 0x7e, 0x1e, 0x23, 0x63, 0xba, 0xcf, 0x70, 0x3c, 0x36, 0x3d, 0xdd,
	0x74, 0x6d, 0xdd, 0x47, 0x6f, 0x6a, 0x5b, 0xe8, 0xeb, 0x03, 0x93, 0x99, 0x3e, 0xa3, 0x1e, 0xea,
	0xd3, 0xfd, 0xb9, 0xa1, 0xb9, 0x1e, 0x65, 0x94, 0xfc, 0xc9, 0x43, 0xb4, 0xc4, 0x5d, 0x9b, 0x7b,
	0x4c, 0xf7, 0x6b, 0x9b, 0x43, 0x3a, 0xa4, 0x91, 0xa7, 0x1e, 0xae, 0xe2, 0xa0, 0xda, 0x1f, 0x43,
	0x4a, 0x87, 0x63, 0xd4, 0x23, 0xab, 0x1f, 0x5c, 0xeb, 0x38, 0x71, 0xd9, 0x8c, 0x1f, 0xfe, 0xf5,
	0xf0, 0x70, 0x10, 0x78, 0x26, 0xb3, 0xa9, 0x13, 0x9f, 0xab, 0x25, 0x28, 0x9c, 0x3a, 0xd7, 0xd4,
	0xc0, 0xdb, 0x00, 0x7d, 0xa6, 0xfe, 0x03, 0xc5, 0xd8, 0xf4, 0x5d, 0xea, 0xf8, 0x48, 0x2a, 0x90,
	0xb1, 0x07, 0x55, 0xa9, 0x2e, 0x35, 0xd6, 0xda, 0xca, 0xf7, 0x6f, 0x7f, 0x67, 0x4e, 0x3b, 0x46,
	0xc6, 0x1e, 0xa8, 0xa7, 0x40, 0x5a, 0xd6, 0x6d, 0x60, 0x7b, 0x78, 0x46, 0xad, 0x11, 0x8f, 0x26,
	0x07, 0x90, 0x63, 0xf6, 0x04, 0x69, 0xc0, 0xa2, 0x90, 0x42, 0xf3, 0x77, 0x2d, 0x4e, 0xaf, 0x25,
	0xe9, 0xb5, 0x0e, 0x4f, 0x6f, 0x24, 0x9e, 0xea, 0x26, 0x10, 0x03, 0xc7, 0x68, 0xfa, 0x69, 0x29,
	0x75, 0x0f, 0x7e, 0x3b, 0xf6, 0xd0, 0x64, 0xd8, 0x0e, 0xac, 0x11, 0xb2, 0x24, 0x43, 0x05, 0x94,
	0x7e, 0xb4, 0x11, 0xd7, 0x64, 0x70, 0x4b, 0xfd, 0x08, 0xd0, 0x13, 0x7a, 0x91, 0x0d, 0x90, 0x47,
	0x38, 0xab, 0x66, 0xa2, 0xcd, 0x70, 0x49, 0x36, 0xe1, 0xd7, 0xa9, 0x39, 0x0e, 0xb0, 0x2a, 0xd7,
	0xa5, 0x46, 0xd1, 0x88, 0x0d, 0x42, 0x20, 0xeb, 0xcf, 0x1c, 0xab, 0x9a, 0xad, 0x4b, 0x8d, 0xbc,
	0x11, 0xad, 0xd5, 0x26, 0xe4, 0x5f, 0xe3, 0xec, 0x5d, 0x74, 0xce, 0x75, 0xa4, 0x05, 0x3a, 0x99,
	0x94, 0x8e, 0xfa, 0x12, 0xe0, 0xe4, 0x19, 0x55, 0xa9, 0x47, 0x50, 0xea, 0xa1, 0xe9, 0x59, 0x37,
	0xa2, 0xd0, 0x0a, 0x28, 0xae, 0x87, 0xd7, 0xf6, 0x27, 0x1e, 0xcd, 0x2d, 0x15, 0xa1, 0x9c, 0x08,
	0xdc, 0x35, 0x72, 0xb1, 0xc2, 0x21, 0x64, 0xc3, 0x11, 0xab, 0x66, 0xea, 0x72, 0xa3, 0xd0, 0xfc,
	0x57, 0xfb, 0xe9, 0x00, 0x6a, 0xc9, 0x0b, 0x18, 0x51, 0x90, 0xda, 0x87, 0x42, 0x74, 0xbf, 0x95,
	0x73, 0x48, 0x4f, 0xcf, 0xe1, 0x42, 0xa9, 0x83, 0x63, 0x64, 0xf8, 0xf4, 0xe6, 0x26, 0x6d, 0x94,
	0xe7, 0x6d, 0x24, 0x5b, 0x50, 0x74, 0xe8, 0x15, 0xa3, 0x93, 0xbe, 0xcf, 0xa8, 0x83, 0xbc, 0xc5,
	0x05, 0x87, 0x5e, 0x24, 0x5b, 0xea, 0x3a, 0x94, 0xda, 0xa6, 0x35, 0x0a, 0xdc, 0x64, 0x16, 0xb7,
	0xa1, 0x9c, 0x6c, 0xf0, 0x9b, 0x12, 0x7e, 0x23, 0x29, 0xea, 0x76, 0x5c, 0xe8, 0x36, 0x94, 0x0d,
	0x8c, 0x6e, 0x91, 0x54, 0xba, 0xc8, 0xab, 0x04, 0x85, 0xde, 0xcc, 0xb1, 0x12, 0xe9, 0x2f, 0x12,
	0x94, 0x42, 0xfb, 0xad, 0x8b, 0xf1, 0x77, 0x41, 0x5a, 0xa0, 0x98, 0x56, 0xb8, 0x8a, 0xc2, 0xca,
	0xcd, 0xff, 0x04, 0xcf, 0x15, 0x46, 0xb7, 0xa2, 0x00, 0x83, 0x07, 0xa6, 0x5e, 0x28, 0xb3, 0xe8,
	0x85, 0xe4, 0x05, 0x63, 0x9b, 0x4d, 0x8f, 0xed, 0x31, 0xac, 0x9f, 0x23, 0x7a, 0xa9, 0x3a, 0x97,
	0x71, 0x80, 0x54, 0x21, 0x67, 0x0e, 0x06, 0x1e, 0xfa, 0x3e, 0xcf, 0x95, 0x98, 0x3b, 0x5b, 0x00,
	0xf3, 0xd2, 0x48, 0x0e, 0xe4, 0x5e, 0xf7, 0x62, 0xe3, 0x17, 0x02, 0xa0, 0x74, 0xba, 0x67, 0xdd,
	0x8b, 0xee, 0x86, 0xd4, 0xfc, 0x9a, 0x87, 0xb5, 0x4e, 0x72, 0x17, 0x72, 0x05, 0xd9, 0x10, 0x3d,
	0x64, 0x47, 0x70, 0xe1, 0x14, 0xae, 0x6a, 0xff, 0xaf, 0xe4, 0xcb, 0x9b, 0xf6, 0x1e, 0x0a, 0x29,
	0x66, 0x91, 0x7d, 0x41, 0xec, 0x63, 0xbe, 0xd5, 0x2a, 0x8f, 0x70, 0xd6, 0x0d, 0x51, 0x1b, 0x2a,
	0xa7, 0x10, 0x26, 0x54, 0x7e, 0x8c, 0xbb, 0xa5, 0xca, 0x97, 0x50, 0x4c, 0x63, 0x90, 0x34, 0x05,
	0xd2, 0x0b, 0x98, 0xb9, 0x54, 0xfb, 0x15, 0xc8, 0x3d, 0x64, 0x44, 0x38, 0x60, 0x62, 0xa5, 0x0f,
	0x20, 0x9f, 0xac, 0xa0, 0x34, 0x67, 0x61, 0x6d, 0x67, 0x15, 0x57, 0xde, 0x37, 0x04, 0x25, 0x86,
	0x19, 0xd9, 0x15, 0x96, 0x9a, 0x82, 0x66, 0x6d, 0x6f, 0x45, 0x6f, 0x9e, 0xe6, 0x0d, 0x28, 0x31,
	0x68, 0x84, 0x69, 0xee, 0xf1, 0x68, 0xe9, 0xa3, 0x20, 0x28, 0x31, 0x35, 0x84, 0x7a, 0xf7, 0x68,
	0x23, 0x2c, 0xfb, 0x01, 0x8a, 0xce, 0x21, 0xc7, 0xb1, 0x43, 0xf6, 0x84, 0x73, 0x97, 0xc6, 0xd3,
	0xd2, 0xc2, 0xfb, 0x90, 0x0d, 0xbf, 0x5c, 0xe1, 0x87, 0x98, 0xe2, 0x43, 0x6d, 0x77, 0x05, 0xdf,
	0x3b, 0xc6, 0xbd, 0x90, 0x88, 0x01, 0xf9, 0x04, 0x31, 0x44, 0x13, 0xc4, 0x3e, 0x60, 0xd1, 0xb2,
	0xba, 0xdb, 0xad, 0xcb, 0xa3, 0x67, 0xfd, 0x85, 0x1d, 0xde, 0x19, 0x7d, 0x25, 0x92, 0x3c, 0xf8,
	0x11, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x93, 0xb7, 0x66, 0xcf, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DatastoreClient is the client API for Datastore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DatastoreClient interface {
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	AcquireLock(ctx context.Context, in *AcquireLockRequest, opts ...grpc.CallOption) (*types.Empty, error)
	ReleaseLock(ctx context.Context, in *ReleaseLockRequest, opts ...grpc.CallOption) (*types.Empty, error)
	CreateBucket(ctx context.Context, in *CreateBucketRequest, opts ...grpc.CallOption) (*types.Empty, error)
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*types.Empty, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*types.Empty, error)
	Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*BackupResponse, error)
	Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*types.Empty, error)
	Sync(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (Datastore_SyncClient, error)
	PeerSync(ctx context.Context, in *PeerSyncRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type datastoreClient struct {
	cc *grpc.ClientConn
}

func NewDatastoreClient(cc *grpc.ClientConn) DatastoreClient {
	return &datastoreClient{cc}
}

func (c *datastoreClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/stellar.services.datastore.v1.Datastore/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datastoreClient) AcquireLock(ctx context.Context, in *AcquireLockRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/stellar.services.datastore.v1.Datastore/AcquireLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datastoreClient) ReleaseLock(ctx context.Context, in *ReleaseLockRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/stellar.services.datastore.v1.Datastore/ReleaseLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datastoreClient) CreateBucket(ctx context.Context, in *CreateBucketRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/stellar.services.datastore.v1.Datastore/CreateBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datastoreClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/stellar.services.datastore.v1.Datastore/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datastoreClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/stellar.services.datastore.v1.Datastore/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datastoreClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/stellar.services.datastore.v1.Datastore/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datastoreClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/stellar.services.datastore.v1.Datastore/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datastoreClient) Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*BackupResponse, error) {
	out := new(BackupResponse)
	err := c.cc.Invoke(ctx, "/stellar.services.datastore.v1.Datastore/Backup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datastoreClient) Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/stellar.services.datastore.v1.Datastore/Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datastoreClient) Sync(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (Datastore_SyncClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Datastore_serviceDesc.Streams[0], "/stellar.services.datastore.v1.Datastore/Sync", opts...)
	if err != nil {
		return nil, err
	}
	x := &datastoreSyncClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Datastore_SyncClient interface {
	Recv() (*SyncOperation, error)
	grpc.ClientStream
}

type datastoreSyncClient struct {
	grpc.ClientStream
}

func (x *datastoreSyncClient) Recv() (*SyncOperation, error) {
	m := new(SyncOperation)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *datastoreClient) PeerSync(ctx context.Context, in *PeerSyncRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/stellar.services.datastore.v1.Datastore/PeerSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DatastoreServer is the server API for Datastore service.
type DatastoreServer interface {
	Info(context.Context, *InfoRequest) (*InfoResponse, error)
	AcquireLock(context.Context, *AcquireLockRequest) (*types.Empty, error)
	ReleaseLock(context.Context, *ReleaseLockRequest) (*types.Empty, error)
	CreateBucket(context.Context, *CreateBucketRequest) (*types.Empty, error)
	Set(context.Context, *SetRequest) (*types.Empty, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Delete(context.Context, *DeleteRequest) (*types.Empty, error)
	Backup(context.Context, *BackupRequest) (*BackupResponse, error)
	Restore(context.Context, *RestoreRequest) (*types.Empty, error)
	Sync(*SyncRequest, Datastore_SyncServer) error
	PeerSync(context.Context, *PeerSyncRequest) (*types.Empty, error)
}

func RegisterDatastoreServer(s *grpc.Server, srv DatastoreServer) {
	s.RegisterService(&_Datastore_serviceDesc, srv)
}

func _Datastore_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatastoreServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.datastore.v1.Datastore/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatastoreServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Datastore_AcquireLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatastoreServer).AcquireLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.datastore.v1.Datastore/AcquireLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatastoreServer).AcquireLock(ctx, req.(*AcquireLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Datastore_ReleaseLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatastoreServer).ReleaseLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.datastore.v1.Datastore/ReleaseLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatastoreServer).ReleaseLock(ctx, req.(*ReleaseLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Datastore_CreateBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatastoreServer).CreateBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.datastore.v1.Datastore/CreateBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatastoreServer).CreateBucket(ctx, req.(*CreateBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Datastore_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatastoreServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.datastore.v1.Datastore/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatastoreServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Datastore_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatastoreServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.datastore.v1.Datastore/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatastoreServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Datastore_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatastoreServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.datastore.v1.Datastore/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatastoreServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Datastore_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatastoreServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.datastore.v1.Datastore/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatastoreServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Datastore_Backup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatastoreServer).Backup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.datastore.v1.Datastore/Backup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatastoreServer).Backup(ctx, req.(*BackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Datastore_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatastoreServer).Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.datastore.v1.Datastore/Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatastoreServer).Restore(ctx, req.(*RestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Datastore_Sync_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SyncRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DatastoreServer).Sync(m, &datastoreSyncServer{stream})
}

type Datastore_SyncServer interface {
	Send(*SyncOperation) error
	grpc.ServerStream
}

type datastoreSyncServer struct {
	grpc.ServerStream
}

func (x *datastoreSyncServer) Send(m *SyncOperation) error {
	return x.ServerStream.SendMsg(m)
}

func _Datastore_PeerSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeerSyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatastoreServer).PeerSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellar.services.datastore.v1.Datastore/PeerSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatastoreServer).PeerSync(ctx, req.(*PeerSyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Datastore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stellar.services.datastore.v1.Datastore",
	HandlerType: (*DatastoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Info",
			Handler:    _Datastore_Info_Handler,
		},
		{
			MethodName: "AcquireLock",
			Handler:    _Datastore_AcquireLock_Handler,
		},
		{
			MethodName: "ReleaseLock",
			Handler:    _Datastore_ReleaseLock_Handler,
		},
		{
			MethodName: "CreateBucket",
			Handler:    _Datastore_CreateBucket_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _Datastore_Set_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Datastore_Get_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Datastore_Search_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Datastore_Delete_Handler,
		},
		{
			MethodName: "Backup",
			Handler:    _Datastore_Backup_Handler,
		},
		{
			MethodName: "Restore",
			Handler:    _Datastore_Restore_Handler,
		},
		{
			MethodName: "PeerSync",
			Handler:    _Datastore_PeerSync_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Sync",
			Handler:       _Datastore_Sync_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/ehazlett/stellar/api/services/datastore/v1/datastore.proto",
}
